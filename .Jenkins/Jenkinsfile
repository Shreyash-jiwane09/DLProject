pipeline {
  agent any

  environment {
    ECR_REPOSITORY = credentials('ECR_REPOSITORY')         // Full URI like: 123456789012.dkr.ecr.ap-south-1.amazonaws.com/my-repo
    AWS_ACCOUNT_ID = credentials('AWS_ACCOUNT_ID')         // 123456789012
    AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')   // Access Key
    AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY') // Secret Key
    AWS_REGION = 'ap-south-1'
  }

  stages {
    stage('Continuous Integration') {
      steps {
        script {
          echo "üîç Linting repository"
          echo "‚úÖ Running unit tests"
        }
      }
    }

    stage('Login to ECR') {
      steps {
        script {
          sh """
            aws ecr get-login-password --region ${AWS_REGION} | \
            docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
          """
        }
      }
    }

    stage('Build Image') {
      steps {
        script {
          sh "docker build -t ${ECR_REPOSITORY}:latest ."
        }
      }
    }

    stage('Push Image') {
      steps {
        script {
          sh "docker push ${ECR_REPOSITORY}:latest"
        }
      }
    }

    stage('Continuous Deployment') {
  steps {
    sshagent(['ssh_key']) {
      sh """
        ssh -o StrictHostKeyChecking=no -l ubuntu YOUR.EC2.IP.ADDRESS '
          cd /home/ubuntu/ &&
          wget -O docker-compose.yml https://raw.githubusercontent.com/Shreyash-jiwane09/DLProject/main/docker-compose.yml &&
          export IMAGE_NAME=${ECR_REPOSITORY}:latest &&
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.ap-south-1.amazonaws.com &&
          docker compose up -d
        '
      """
    }
  }
}

  post {
    always {
      echo "üßπ Cleaning up Docker resources"
      sh 'docker system prune -f'
    }
  }
}
